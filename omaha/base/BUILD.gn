static_library("lib") {
  sources = [
    "../third_party/chrome/files/src/base/cpu.cc",
    "../third_party/chrome/files/src/base/rand_util.cc",
    "../third_party/chrome/files/src/crypto/rsa_private_key.cc",
    "../third_party/chrome/files/src/crypto/rsa_private_key_win.cc",
    "../third_party/chrome/files/src/crypto/signature_creator_win.cc",
    "app_util.cc",
    "apply_tag.cc",
    "atl_regexp.cc",
    "browser_utils.cc",
    "cgi.cc",
    "clipboard.cc",
    "command_line_parser.cc",
    "command_line_validator.cc",
    "commands.cc",
    "crash_if_specific_error.cc",
    "debug.cc",
    "disk.cc",
    "dynamic_link_kernel32.cc",
    "encrypt.cc",
    "environment_block_modifier.cc",
    "environment_utils.cc",
    "error.cc",
    "etw_log_writer.cc",
    "event_trace_controller.cc",
    "event_trace_provider.cc",
    "extractor.cc",
    "file.cc",
    "file_reader.cc",
    "file_ver.cc",
    "firewall_product_detection.cc",
    "highres_timer-win32.cc",
    "logging.cc",
    "omaha_version.cc",
    "path.cc",
    "proc_utils.cc",
    "process.cc",
    "program_instance.cc",
    "queue_timer.cc",
    "reactor.cc",
    "reg_key.cc",
    "regexp.cc",
    "registry_monitor_manager.cc",
    "safe_format.cc",
    "service_utils.cc",
    "shell.cc",
    "shutdown_handler.cc",
    "signatures.cc",
    "signaturevalidator.cc",
    "string.cc",
    "synchronized.cc",
    "system.cc",
    "system_info.cc",
    "thread.cc",
    "thread_pool.cc",
    "time.cc",
    "timer.cc",
    "user_info.cc",
    "user_rights.cc",
    "utils.cc",
    "vista_utils.cc",
    "vistautil.cc",
    "window_utils.cc",
    "wmi_query.cc",
    "xml_utils.cc",
  ]
}

static_library("logging") {
  sources = [
    "logging/logging.cc",
  ]
}

static_library("security") {
  cflags = [
    "/wd4242",  # conversion from 'type1' to 'type2', possible loss of data
    "/wd4244",  # conversion from 'type1' to 'type2', possible loss of data
    "/wd4245",  # initializing': conversion from/to signed/unsigned mismatch
  ]

  sources = [
    "security/hmac.c",
    "security/p256.c",
    "security/p256_ec.c",
    "security/p256_ecdsa.c",
    "security/p256_prng.c",
    "security/sha.c",
    "security/sha256.c",
    "security/util.c",
  ]
}

action("crx_proto") {
  script = "//build/proto_compile.py"
  sources = ["//third_party/chrome/files/src/components/crx_file/crx3.proto"]
  outputs = [
    "$target_gen_dir/third_party/chrome/files/src/components/crx_file/crx3.pb.h",
    "$target_gen_dir/third_party/chrome/files/src/components/crx_file/crx3.pb.cc",
  ]

  args = [
    "--cpp_out=" + rebase_path("$target_gen_dir/third_party/chrome/files/src/components/crx_file", root_build_dir),
    "--proto_path=" + rebase_path(get_path_info(sources[0], "dir"), root_build_dir)
  ]
  args += [
    get_path_info(sources[0], "file")
  ]
}

static_library("crx_file") {
  sources = [
    "//third_party/chrome/files/src/components/crx_file/crx_verifier.cc",
    "//third_party/chrome/files/src/components/crx_file/id_util.cc",
    "//third_party/chrome/files/src/crypto/secure_util.cc",
    "//third_party/chrome/files/src/crypto/signature_verifier.cc",
    "//third_party/chrome/files/src/crypto/signature_verifier_win.cc",
    "$target_gen_dir/third_party/chrome/files/src/components/crx_file/crx3.pb.cc",
  ]

  # Libzip src
  sources += [
    "//../third_party/libzip/src/getopt.c",
    "//../third_party/libzip/src/zipcmp.c",
    "//../third_party/libzip/src/zipmerge.c",
    "//../third_party/libzip/src/ziptool.c",
  ]

  # Libzip lib
  sources += [
    "//../third_party/libzip/lib/zip_add.c",
    "//../third_party/libzip/lib/zip_add_dir.c",
    "//../third_party/libzip/lib/zip_add_entry.c",
    "//../third_party/libzip/lib/zip_algorithm_deflate.c",
    "//../third_party/libzip/lib/zip_buffer.c",
    "//../third_party/libzip/lib/zip_close.c",
    "//../third_party/libzip/lib/zip_delete.c",
    "//../third_party/libzip/lib/zip_dir_add.c",
    "//../third_party/libzip/lib/zip_dirent.c",
    "//../third_party/libzip/lib/zip_discard.c",
    "//../third_party/libzip/lib/zip_entry.c",
    "//../third_party/libzip/lib/zip_err_str.c",
    "//../third_party/libzip/lib/zip_error.c",
    "//../third_party/libzip/lib/zip_error_clear.c",
    "//../third_party/libzip/lib/zip_error_get.c",
    "//../third_party/libzip/lib/zip_error_get_sys_type.c",
    "//../third_party/libzip/lib/zip_error_strerror.c",
    "//../third_party/libzip/lib/zip_error_to_str.c",
    "//../third_party/libzip/lib/zip_extra_field.c",
    "//../third_party/libzip/lib/zip_extra_field_api.c",
    "//../third_party/libzip/lib/zip_fclose.c",
    "//../third_party/libzip/lib/zip_fdopen.c",
    "//../third_party/libzip/lib/zip_file_add.c",
    "//../third_party/libzip/lib/zip_file_error_clear.c",
    "//../third_party/libzip/lib/zip_file_error_get.c",
    "//../third_party/libzip/lib/zip_file_get_comment.c",
    "//../third_party/libzip/lib/zip_file_get_external_attributes.c",
    "//../third_party/libzip/lib/zip_file_get_offset.c",
    "//../third_party/libzip/lib/zip_file_rename.c",
    "//../third_party/libzip/lib/zip_file_replace.c",
    "//../third_party/libzip/lib/zip_file_set_comment.c",
    "//../third_party/libzip/lib/zip_file_set_encryption.c",
    "//../third_party/libzip/lib/zip_file_set_external_attributes.c",
    "//../third_party/libzip/lib/zip_file_set_mtime.c",
    "//../third_party/libzip/lib/zip_file_strerror.c",
    "//../third_party/libzip/lib/zip_filerange_crc.c",
    "//../third_party/libzip/lib/zip_fopen.c",
    "//../third_party/libzip/lib/zip_fopen_encrypted.c",
    "//../third_party/libzip/lib/zip_fopen_index.c",
    "//../third_party/libzip/lib/zip_fopen_index_encrypted.c",
    "//../third_party/libzip/lib/zip_fread.c",
    "//../third_party/libzip/lib/zip_fseek.c",
    "//../third_party/libzip/lib/zip_ftell.c",
    "//../third_party/libzip/lib/zip_get_archive_comment.c",
    "//../third_party/libzip/lib/zip_get_archive_flag.c",
    "//../third_party/libzip/lib/zip_get_encryption_implementation.c",
    "//../third_party/libzip/lib/zip_get_file_comment.c",
    "//../third_party/libzip/lib/zip_get_name.c",
    "//../third_party/libzip/lib/zip_get_num_entries.c",
    "//../third_party/libzip/lib/zip_get_num_files.c",
    "//../third_party/libzip/lib/zip_hash.c",
    "//../third_party/libzip/lib/zip_io_util.c",
    "//../third_party/libzip/lib/zip_libzip_version.c",
    "//../third_party/libzip/lib/zip_memdup.c",
    "//../third_party/libzip/lib/zip_name_locate.c",
    "//../third_party/libzip/lib/zip_new.c",
    "//../third_party/libzip/lib/zip_open.c",
    "//../third_party/libzip/lib/zip_progress.c",
    "//../third_party/libzip/lib/zip_rename.c",
    "//../third_party/libzip/lib/zip_replace.c",
    "//../third_party/libzip/lib/zip_set_archive_comment.c",
    "//../third_party/libzip/lib/zip_set_archive_flag.c",
    "//../third_party/libzip/lib/zip_set_default_password.c",
    "//../third_party/libzip/lib/zip_set_file_comment.c",
    "//../third_party/libzip/lib/zip_set_file_compression.c",
    "//../third_party/libzip/lib/zip_set_name.c",
    "//../third_party/libzip/lib/zip_source_begin_write.c",
    "//../third_party/libzip/lib/zip_source_begin_write_cloning.c",
    "//../third_party/libzip/lib/zip_source_buffer.c",
    "//../third_party/libzip/lib/zip_source_call.c",
    "//../third_party/libzip/lib/zip_source_close.c",
    "//../third_party/libzip/lib/zip_source_commit_write.c",
    "//../third_party/libzip/lib/zip_source_compress.c",
    "//../third_party/libzip/lib/zip_source_crc.c",
    "//../third_party/libzip/lib/zip_source_error.c",
    "//../third_party/libzip/lib/zip_source_win32utf8.c",
    "//../third_party/libzip/lib/zip_source_win32w.c",
    "//../third_party/libzip/lib/zip_source_free.c",
    "//../third_party/libzip/lib/zip_source_function.c",
    "//../third_party/libzip/lib/zip_source_get_compression_flags.c",
    "//../third_party/libzip/lib/zip_source_is_deleted.c",
    "//../third_party/libzip/lib/zip_source_layered.c",
    "//../third_party/libzip/lib/zip_source_open.c",
    "//../third_party/libzip/lib/zip_source_pkware.c",
    "//../third_party/libzip/lib/zip_source_read.c",
    "//../third_party/libzip/lib/zip_source_remove.c",
    "//../third_party/libzip/lib/zip_source_rollback_write.c",
    "//../third_party/libzip/lib/zip_source_seek.c",
    "//../third_party/libzip/lib/zip_source_seek_write.c",
    "//../third_party/libzip/lib/zip_source_stat.c",
    "//../third_party/libzip/lib/zip_source_supports.c",
    "//../third_party/libzip/lib/zip_source_tell.c",
    "//../third_party/libzip/lib/zip_source_tell_write.c",
    "//../third_party/libzip/lib/zip_source_window.c",
    "//../third_party/libzip/lib/zip_source_win32handle.c",
    "//../third_party/libzip/lib/zip_source_write.c",
    "//../third_party/libzip/lib/zip_source_zip.c",
    "//../third_party/libzip/lib/zip_source_zip_new.c",
    "//../third_party/libzip/lib/zip_stat.c",
    "//../third_party/libzip/lib/zip_stat_index.c",
    "//../third_party/libzip/lib/zip_stat_init.c",
    "//../third_party/libzip/lib/zip_strerror.c",
    "//../third_party/libzip/lib/zip_string.c",
    "//../third_party/libzip/lib/zip_unchange.c",
    "//../third_party/libzip/lib/zip_unchange_all.c",
    "//../third_party/libzip/lib/zip_unchange_archive.c",
    "//../third_party/libzip/lib/zip_unchange_data.c",
    "//../third_party/libzip/lib/zip_utf-8.c",
  ]

  sources += [
    "//../third_party/zlib/v1_2_11/adler32.c",
    "//../third_party/zlib/v1_2_11/compress.c",
    "//../third_party/zlib/v1_2_11/crc32.c",
    "//../third_party/zlib/v1_2_11/deflate.c",
    "//../third_party/zlib/v1_2_11/gzlib.c",
    "//../third_party/zlib/v1_2_11/gzread.c",
    "//../third_party/zlib/v1_2_11/gzwrite.c",
    "//../third_party/zlib/v1_2_11/infback.c",
    "//../third_party/zlib/v1_2_11/inffast.c",
    "//../third_party/zlib/v1_2_11/inflate.c",
    "//../third_party/zlib/v1_2_11/inftrees.c",
    "//../third_party/zlib/v1_2_11/trees.c",
    "//../third_party/zlib/v1_2_11/uncompr.c",
    "//../third_party/zlib/v1_2_11/zutil.c",
  ]

  include_dirs = [
    #"//../third_party/libzip/build",
    "//base/libzip",
    "//../third_party/libzip/lib",
    "//../third_party/zlib/v1_2_11",
    target_gen_dir,
    getenv("OMAHA_PROTOBUF_SRC_DIR"),
  ]

  defines = [
    "HAVE_CONFIG_H",
    "ZIP_STATIC",
  ]

  cflags = [
    "/wd4005",
    "/wd4100",
    "/wd4013",
    "/wd4047",
    "/wd4131",
    "/wd4132",
    "/wd4242",
    "/wd4244",
    "/wd4245",
    "/wd4255",
    "/wd4267",
    "/wd4310",
    "/wd4312",
    "/wd4388",
    "/wd4389",
    "/wd4647",
    "/wd4548",
    "/wd4706",
    "/wd4477",
    "/wd4541", # warning C4541: 'dynamic_cast' used on polymorphic type T
               # with /GR-; unpredictable behavior may result
  ]

  deps = [
    ":crx_proto"
  ]
}

#
# LIBPROTOBUF
#
static_library("libprotobuf") {
  defines = [
    "LIBPROTOBUF_EXPORTS",
  ]
  cflags = [
    "/wd4005",
    "/wd4018",
    "/wd4065",
    "/wd4100",
    "/wd4125",
    "/wd4146",
    "/wd4242",
    "/wd4244",
    "/wd4267",
    "/wd4310",
    "/wd4355",
    "/wd4388",
    "/wd4389",
    "/wd4456",
    "/wd4506",
    "/wd4548",
    "/wd4647",
    "/wd4701",
    "/wd4702",
    "/wd4703",
    "/wd4798",
    "/wd4800",
    "/wd4946",
    # Extra, those were not defined in scons build
    "/wd4541", # warning C4541: 'dynamic_cast' used on polymorphic type T
               # with /GR-; unpredictable behavior may result
  ]
  proto_src_path = getenv("OMAHA_PROTOBUF_SRC_DIR")

  include_dirs = [
    proto_src_path,
  ]
  sources = [
    "$proto_src_path/google/protobuf/compiler/importer.cc",
    "$proto_src_path/google/protobuf/compiler/parser.cc",
    "$proto_src_path/google/protobuf/any.cc",
    "$proto_src_path/google/protobuf/descriptor.cc",
    "$proto_src_path/google/protobuf/descriptor.pb.cc",
    "$proto_src_path/google/protobuf/descriptor_database.cc",
    "$proto_src_path/google/protobuf/dynamic_message.cc",
    "$proto_src_path/google/protobuf/extension_set.cc",
    "$proto_src_path/google/protobuf/extension_set_heavy.cc",
    "$proto_src_path/google/protobuf/generated_message_reflection.cc",
    "$proto_src_path/google/protobuf/generated_message_util.cc",
    "$proto_src_path/google/protobuf/implicit_weak_message.cc",
    "$proto_src_path/google/protobuf/io/coded_stream.cc",
    "$proto_src_path/google/protobuf/io/printer.cc",
    "$proto_src_path/google/protobuf/io/strtod.cc",
    "$proto_src_path/google/protobuf/io/tokenizer.cc",
    "$proto_src_path/google/protobuf/io/zero_copy_stream.cc",
    "$proto_src_path/google/protobuf/io/zero_copy_stream_impl.cc",
    "$proto_src_path/google/protobuf/io/zero_copy_stream_impl_lite.cc",
    "$proto_src_path/google/protobuf/arena.cc",
    "$proto_src_path/google/protobuf/map_field.cc",
    "$proto_src_path/google/protobuf/message.cc",
    "$proto_src_path/google/protobuf/message_lite.cc",
    "$proto_src_path/google/protobuf/reflection_ops.cc",
    "$proto_src_path/google/protobuf/repeated_field.cc",
    "$proto_src_path/google/protobuf/service.cc",
    "$proto_src_path/google/protobuf/stubs/common.cc",
    "$proto_src_path/google/protobuf/stubs/int128.cc",
    "$proto_src_path/google/protobuf/stubs/status.cc",
    "$proto_src_path/google/protobuf/stubs/stringprintf.cc",
    "$proto_src_path/google/protobuf/stubs/stringpiece.cc",
    "$proto_src_path/google/protobuf/stubs/structurally_valid.cc",
    "$proto_src_path/google/protobuf/stubs/strutil.cc",
    "$proto_src_path/google/protobuf/stubs/substitute.cc",
    "$proto_src_path/google/protobuf/text_format.cc",
    "$proto_src_path/google/protobuf/unknown_field_set.cc",
    "$proto_src_path/google/protobuf/wire_format.cc",
    "$proto_src_path/google/protobuf/wire_format_lite.cc",
  ]
}
