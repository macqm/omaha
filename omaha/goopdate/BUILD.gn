import("//build/toolchain/midl.gni")

action("generate_idl") {
  script = "//tools/generate_omaha3_idl.py"

  inputs = [
    "omaha3_idl.idl",
  ]
  outputs = [
    "$target_gen_dir/omaha3_idl.idl",
  ]
  args = [
    "--idl_template_file",
    rebase_path(inputs[0], root_build_dir),
    "--idl_output_file",
    rebase_path(outputs[0], root_build_dir),
  ]
}

midl("omaha3_idl") {
  sources = get_target_outputs(":generate_idl")
  deps = [
    ":generate_idl",
  ]
  writes_tlb = true
}

static_library("goopdate_lib") {
  sources = [
    "app.cc",
    "app_bundle.cc",
    "app_bundle_state.cc",
    "app_bundle_state_busy.cc",
    "app_bundle_state_init.cc",
    "app_bundle_state_initialized.cc",
    "app_bundle_state_paused.cc",
    "app_bundle_state_ready.cc",
    "app_bundle_state_stopped.cc",
    "app_command.cc",
    "app_command_completion_observer.cc",
    "app_command_configuration.cc",
    "app_command_formatter.cc",
    "app_command_model.cc",
    "app_command_ping_delegate.cc",
    "app_manager.cc",
    "app_state.cc",
    "app_state_checking_for_update.cc",
    "app_state_download_complete.cc",
    "app_state_downloading.cc",
    "app_state_error.cc",
    "app_state_init.cc",
    "app_state_install_complete.cc",
    "app_state_installing.cc",
    "app_state_no_update.cc",
    "app_state_ready_to_install.cc",
    "app_state_update_available.cc",
    "app_state_waiting_to_check_for_update.cc",
    "app_state_waiting_to_download.cc",
    "app_state_waiting_to_install.cc",
    "app_version.cc",
    "application_usage_data.cc",
    "cocreate_async.cc",
    "code_red_check.cc",
    "crash.cc",
    "cred_dialog.cc",
    "current_state.cc",
    "download_manager.cc",
    "google_app_command_verifier.cc",
    "google_update.cc",
    "goopdate.cc",
    "goopdate_metrics.cc",
    "install_manager.cc",
    "installer_wrapper.cc",
    "job_observer.cc",
    "model.cc",
    "offline_utils.cc",
    "ondemand.cc",
    "package.cc",
    "package_cache.cc",
    "ping_event_cancel.cc",
    "process_launcher.cc",
    "resource_manager.cc",
    "string_formatter.cc",
    "update3web.cc",
    "update_request_utils.cc",
    "update_response_utils.cc",
    "worker.cc",
    "worker_metrics.cc",
    "worker_utils.cc",
  ]
  defines = [ "_ATL_FREE_THREADED" ]
}

shared_library("goopdate_dll") {
  sources = [
    "goopdate.def",
    "main.cc",

    #resource_res,
    #version_res,
  ]
  deps = [
    ":goopdate_lib",
    "//base:crx_file",
    "//base:lib",
    "//base:libprotobuf",
    "//base:logging",
    "//base:security",
    "//client:client_lib",
    "//common:goopdate_util_lib",
    "//core:core_lib",
    "//goopdate:goopdate_lib",
    "//goopdate:omaha3_idl",
    "//net:net",
    "//recovery:client",
    "//service:service_lib",
    "//setup:metrics",
    "//setup:setup_lib",
    "//statsreport:stats_reporter",
    "//third_party/breakpad:breakpad",
    "//ui:ui_lib",
  ]
  libs = [
    "bits.lib",
    "comctl32.lib",
    "crypt32.lib",
    "iphlpapi.lib",
    "msi.lib",
    "netapi32.lib",
    "oleaut32.lib",
    "psapi.lib",
    "rpcns4.lib",
    "rpcrt4.lib",
    "shlwapi.lib",
    "shell32.lib",
    "userenv.lib",
    "uuid.lib",
    "wintrust.lib",
    "version.lib",
  ]

  # Scheduled task deps
  libs += [
    "mstask.lib",
    "taskschd.lib",
  ]

  # UI deps
  libs += [
    "gdi32.lib",
    "msimg32.lib",
    "uxtheme.lib",
  ]
}
